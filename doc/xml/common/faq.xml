<!-- $Id$ -->

  <qandaset>
    <qandaentry>
      <question>
	<para>Where can I find documentation about ruby?</para>
      </question>
      <answer>
	<para>Try the offical Ruby website: <ulink url="http://www.ruby-lang.org/">http://www.ruby-lang.org/</ulink></para>
      </answer>
    </qandaentry>
  
    <qandaentry>
      <question>
	<para>I don't have IPv6 connectivity but ZoneCheck is still
	  using IPv6 addresses.</para>
      </question>
      <answer>
	<para>ZoneCheck only look for an enabled IPv6 stack to
	  authorize the use of IPv6 addresses. It would be a good idea
	  to disable the IPv6 stack on your computer if you don't have
	  the connectivity or you can use the <option>-4</option>
	  option to force IPv4 only connectivity.</para>
      </answer>
    </qandaentry>
    
    <qandaentry>
      <question>
	<para>I want to use an interface other than the CLI.</para>
      </question>
      <answer>
	<para>Use the environment variable <envar>ZC_INPUT</envar>
	  set to your input mode, or use the command line option
	  <option>--INPUT=<replaceable>im</replaceable></option>.
	  The input modes currently supported are <literal>CLI</literal>,
          <literal>CGI</literal>, <literal>inetd</literal> 
	  and <literal>GTK</literal></para>
      </answer>
    </qandaentry>
    
    <qandaentry>
      <question>
	<para>The <option>-d <replaceable>lvl</replaceable></option>
	  option doesn't display earlier debugging messages</para>
      </question>
      <answer>
	<para>Some debugging messages are sent before the debugging
	level is initialised by the command line, in this case use the
	environment variable <envar>ZC_DEBUG</envar> set to the
	desired level.  But keep in mind that <envar>ZC_DEBUG</envar>
	will be overrided by the 
	<option>-d <replaceable>lvl</replaceable></option> option.</para>
      </answer>
    </qandaentry>
    
    <qandaentry>
      <question>
	<para>I would like to easily test ZoneCheck without doing a full
	  installation.</para>
      </question>
      <answer>
	<para>You can define the environment variable
	  <envar>ZC_INSTALL_PATH</envar> to the initial ZoneCheck
	  directory.</para>
      </answer>
    </qandaentry>

    <qandaentry>
      <question>
	<para>Why do I get rubish or wrong results when doing the 
	  <function>chk_icmp</function></para>
      </question>
      <answer>
	<para>ZoneCheck use the command <application>ping</application> to 
	  perform this test, so you should set the constants 
	  <constant>ping4</constant> and <constant>ping6</constant> in 
	  the configuration file so that the <application>ping</application>
	  is correctly invoked: stop after 5 echo requests, doesn't
	  output messages, and return an exit code of 0 in case of success.
	</para>
	<para>If you are using ZoneCheck on the Window plateform, you better
	  remove the test.</para>
      </answer>
    </qandaentry>
   
      <qandaentry>
	<question>
	  <para>Why did I get strange characters when using a locale
	  other than US/English?</para>
	</question>
	<answer>
	  <para>The default encoding is UTF-8, either you can
	  configure your terminal to use UTF-8, or you can specify
	  the desired encoding  after the locale by using a dot 
	  as separator (ex: LANG=fr.latin1); in the last case 
	  the ruby-iconv package should have been installed.</para>
	</answer>
      </qandaentry>

    <qandaentry>
      <question>
	<para>ZoneCheck complains about the lack of TCP connectivity
	for a djbdns/tinydns name server.</para>
      </question>
      <answer>
	<para>Unfortunately, by default, djbdns/tinydns does not
	listen on TCP. See <ulink
	url="http://cr.yp.to/djbdns/tcp.html"/> to enable it.</para>
      </answer>
    </qandaentry>

      <qandaentry>
	<question>
	  <para>ZoneCheck crash when reading configuration files or
	    the message catalog</para>
	</question>
	<answer>
	  <para>REXML is used to parse the XML files, but it only
           checks for well formed XML and doesn't perform validation
           against the DTD, so when you edit the configuration file or
           the message catalog you should ensure that the files are valid,
           for that you can you <application>xmllint</application>
           for example.</para>
	</answer>
      </qandaentry>
<!--
      <qandaentry>
	<question>
	  <para></para>
	</question>
	<answer>
	  <para></para>
	</answer>
      </qandaentry>
-->  

    </qandaset>

<!-- 
  Local Variables:
  mode: xml
  sgml-declaration: "../chapter.decl"
  sgml-indent-data: t
  sgml-omittag: nil
  sgml-always-quote-attributes: t
  sgml-parent-document: ("../zc.xml" "part" "chapter")
  End:
-->

